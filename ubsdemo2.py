# -*- coding: utf-8 -*-
"""Ubsdemo2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BUqaf-5MiYuY4N0sUIoe_yA-zdzOp_8s
"""

import os
import pandas as pd
from pandas import ExcelFile
from pandas import ExcelWriter
import numpy as np

from google.colab import drive
drive.mount('/content/gdrive')

#Input File
input_file= '/content/gdrive/My Drive/ubsdemo/Bio_REGN_7.xlsx'
demo1_file= '/content/gdrive/My Drive/ubsdemo/Bio_REGN_7_demo2_out.xlsx'
# Sheet or Tab
sheet = 'Bio_REGN_4'
# Actions Buy Nuetral Sell
action=['B','H','S']

df = pd.read_excel(input_file,sheet)
df.head()


ts_utc=df['TS_UTC'].to_list()
prices=df['Mid'].to_list()
evss=df['EVENT_SENTIMENT_SCORE'].to_list()
evrel=df['EVENT_RELEVANCE'].to_list()
rel=df['RELEVANCE'].to_list()
typek=df['TYPE'].to_list()
subtypek=df['SUB_TYPE'].to_list()
propertyk=df['PROPERTY'].to_list()
fact_level=df['FACT_LEVEL'].to_list()
action =df['Action'].to_list()
net_k = df['Net_K'].to_list()
numstk_k=df['NumStk_K'].to_list()
bud_k=df['Bud_K'].to_list()
port_k = df['Port_K'].to_list()
reward = df['Reward'].to_list()
   


def run_simulation(bud_k, numstk_k, prices, evss, evrel, rel,debug=False):
    initial_budget=bud_k[0];
    budget = initial_budget
    #print('Initial Budget' , initial_budget )
    initial_num_BC=numstk_k[0];
    num_BC = initial_num_BC
    share_value = 0

  
    for i in range(len(prices) - 1):    
        #print(i)
        current_portfolio = budget + num_BC * share_value
        share_value = float(prices[i + 1])
        evss_value = float(evss[i + 1])
        evrel_value = float(evrel[i + 1])
        rel_value = float(rel[i + 1])
        
        if (evrel_value > 80) and (rel_value > 80):
          if (evss_value > 0.50):
            act = 'B'
          elif (0 <= evss_value ) and (evss_value <= 0.50):
            act = 'H'
          else:
            act = 'S'

          if act == 'B':    
            budget -= share_value
            num_BC += 1
          elif act == 'S': 
            budget += share_value
            num_BC -= 1
          else:
            budget = budget
            num_BC = num_BC
            share_value = 0

        else:
            budget = budget
            num_BC = num_BC
            share_value = 0
            act = 'H'
            
        new_portfolio = budget  + num_BC * share_value
          
        #reward = new_portfolio - current_portfolio
        #print("*****",' ', i,' ', share_value, ' ', evss_value, ' ', act, ' ', reward, ' ',reward)

        action[i+1] = act
        net_k[i+1] = share_value
        numstk_k[i+1] = num_BC
        bud_k[i+1] = budget
        port_k[i+1] = new_portfolio
        # reward[i+1] = reward

    df = pd.DataFrame({'TS_UTC':ts_utc,'Mid':prices,'EVENT_RELEVANCE':evrel,
                   'EVENT_SENTIMENT_SCORE':evss,'RELEVANCE':rel,'TYPE':typek,
                   'SUB_TYPE':subtypek,'PROPERTY':propertyk,'FACT_LEVEL':fact_level,
                   'Action':action,'Net_K':net_k,'NumStk_K':numstk_k,
                   'Bud_K':bud_k,'Port_K':port_k,'Reward':reward})
    
    writer = ExcelWriter(demo1_file)
    df.to_excel(writer,sheet,index=False)
    writer.save()

    portfolio = budget + num_BC * share_value
    print('Portfolio' ,portfolio)
    return portfolio


run_simulation(bud_k, numstk_k, prices, evss, evrel, rel)